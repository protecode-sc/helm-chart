{{/*
Validate object storage configuration
*/}}
{{- include "bdba.objstore.validate" . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "bdba.fullname" . }}-services-configmap
  labels:
    app: {{ template "bdba.name" . }}
    chart: {{ template "bdba.chart" . }}
    release: {{ .Release.Name }}
data:
  {{- if .Values.postgresql.enabled }}
  PGUSER: {{ .Values.postgresql.postgresqlUsername }}
  {{- if .Values.postgresql.postgresqlPort }}
  PGPORT: {{ .Values.postgresql.postgresqlPort }}
  {{- end }}
  PGDATABASE: {{ .Values.postgresql.postgresqlDatabase }}
  PGHOST: {{ template "bdba.postgresql.fullname" . }}
  {{- else }}
  PGUSER: {{ .Values.frontend.database.postgresqlUsername }}
  {{- if .Values.frontend.database.postgresqlPort }}
  PGPORT: {{ .Values.frontend.database.postgresqlPort | quote }}
  {{- end }}
  PGDATABASE: {{ .Values.frontend.database.postgresqlDatabase }}
  PGHOST: {{ .Values.frontend.database.postgresqlHost }}
  {{- if .Values.frontend.database.postgresqlSslMode }}
  PGSSLMODE: {{ .Values.frontend.database.postgresqlSslMode }}
  {{- end }}
  {{- if .Values.frontend.database.clientSecretName }}
  PGSSLKEY: "/postgresql/client-cert/tls.key"
  PGSSLCERT: "/postgresql/client-cert/tls.crt"
  {{- end }}
  {{- if .Values.frontend.database.rootCASecretName }}
  PGSSLROOTCERT: "/postgresql/ca/ca.pem"
  {{- end }}
  {{- end }}
  {{- if .Values.minio.enabled }}
  S3_ENDPOINT: "http://{{ template "bdba.minio.fullname" . }}:{{ .Values.minio.service.port }}"
  {{- else if .Values.s3Endpoint }}
  S3_ENDPOINT: {{ .Values.s3Endpoint | quote }}
  {{- end }}
  {{- if .Values.s3Region }}
  S3_REGION: {{ .Values.s3Region | quote }}
  {{- end }}
  INTERNAL_BUCKET: {{ .Values.frontend.internalBucket | quote }}
  UPLOAD_BUCKET: {{ .Values.frontend.uploadBucket | quote }}
  LOGS_BUCKET: {{ .Values.fluentd.logsBucket | quote }}
  {{- if .Values.memcached.enabled }}
  MEMCACHED: "{{ template "bdba.memcached.fullname" . }}:11211"
  {{- else }}
  MEMCACHED: {{ .Values.memcachedHostPort | quote }}
  MEMCACHED_TLS: {{ .Values.memcachedTls | quote }}
  {{- if .Values.memcachedClientSecretName }}
  MEMCACHED_TLS_CLIENT_KEY: "/memcached/client-cert/tls.key"
  MEMCACHED_TLS_CLIENT_CERT: "/memcached/client-cert/tls.crt"
  {{- end }}
  {{- if .Values.memcachedRootCASecretName }}
  MEMCACHED_CAFILE: "/memcached/ca/ca.pem"
  {{- end }}
  {{- end }}
  {{- if .Values.brokerClientSecretName }}
  BROKER_TLS_CLIENT_KEY: "/rabbitmq/client-cert/tls.key"
  BROKER_TLS_CLIENT_CERT: "/rabbitmq/client-cert/tls.crt"
  {{- end }}
  {{- if .Values.brokerRootCASecretName }}
  BROKER_CA_CERTS: "/rabbitmq/ca/ca.pem"
  {{- end }}

  INTERNAL_FRONTEND_URL: "http://{{ template "bdba.fullname" . }}-webapp:8000"
